[gd_resource type="ShaderMaterial" load_steps=2 format=3 uid="uid://dimb6wp4l7m4e"]

[sub_resource type="Shader" id="12"]
code = "shader_type canvas_item;

uniform bool enabled = false;
uniform float averager : hint_range(0.0, 1.0, 0.01) = 0.1;

varying flat vec4 MODULATE;

void vertex() {
	MODULATE = COLOR;
}

void fragment() {
	COLOR = texture(TEXTURE, UV);
	
	if (enabled) {
		float average = (COLOR.r + COLOR.g + COLOR.b) / 3.0;
		
		if(average <= averager) {
			COLOR = vec4(1.0 - COLOR.r, 1.0 - COLOR.g, 1.0 - COLOR.b, COLOR.a);
		} else {
			COLOR = vec4(0, 0, 0, COLOR.a);
		}
	}
	
	COLOR *= MODULATE;
}"

[resource]
shader = SubResource("12")
shader_parameter/enabled = false
shader_parameter/averager = 0.1
